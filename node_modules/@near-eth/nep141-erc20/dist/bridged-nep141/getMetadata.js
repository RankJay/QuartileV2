"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getAddress_1 = __importDefault(require("./getAddress"));
const getMetadata_1 = require("../natural-erc20/getMetadata");
// TODO: get from NEAR token metadata
async function getName(erc20Address) {
    const erc20Name = await getMetadata_1.getSymbol({ erc20Address });
    return 'n' + erc20Name;
}
/**
 * Fetch address, name, icon, and decimals (precision) of NEP141 token matching
 * given `erc20Address`.
 *
 * Values are cached.
 *
 * Returned `decimals` and `icon` will always be `null` until ratification,
 * adoption, & implementation of https://github.com/near/NEPs/discussions/148
 *
 * @param params Uses Named Arguments pattern, please pass arguments as object
 * @param params.erc20Address ERC20 token contract address
 * @returns Metadata information
 */
async function getMetadata({ erc20Address }) {
    const address = getAddress_1.default({ erc20Address });
    const name = await getName(erc20Address);
    return {
        address,
        decimals: null,
        icon: null,
        name
    };
}
exports.default = getMetadata;
//# sourceMappingURL=getMetadata.js.map