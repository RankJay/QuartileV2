import { ethers } from 'ethers';
import { Account } from 'near-api-js';
export declare function getDecimals({ erc20Address, options }: {
    erc20Address: string;
    options?: {
        provider?: ethers.providers.Provider;
        erc20Abi?: string;
    };
}): Promise<number>;
export declare function getSymbol({ erc20Address, options }: {
    erc20Address: string;
    options?: {
        provider?: ethers.providers.Provider;
        erc20Abi?: string;
    };
}): Promise<string>;
/**
 * Fetch name, icon, and decimals (precision) of ERC20 token with given `address`.
 * Values are cached.
 *
 * @param params Uses Named Arguments pattern, please pass arguments as object
 * @param params.erc20Address ERC20 token contract address
 * @param params.options Optional arguments
 * @param params.options.provider Ethereum provider to use
 * @param params.options.erc20Abi ERC-20 ABI to use
 *
 * @returns Metadata information
 */
export default function getMetadata({ erc20Address, options }: {
    erc20Address: string;
    options?: {
        provider?: ethers.providers.Provider;
        erc20Abi?: string;
        nearAccount?: Account;
        nep141Address?: string;
        nep141Factory?: string;
    };
}): Promise<{
    erc20Address: string;
    decimals: number;
    icon: any;
    symbol: string;
}>;
//# sourceMappingURL=getMetadata.d.ts.map