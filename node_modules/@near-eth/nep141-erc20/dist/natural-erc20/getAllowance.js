"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("@near-eth/client/dist/utils");
const utils_2 = require("@near-eth/utils");
/**
 * Returns the amount of erc20Address tokens which spender is allowed to withdraw from owner.
 * @param params Uses Named Arguments pattern, please pass arguments as object
 * @param params.erc20Address ERC-20 token address
 * @param params.owner Owner's address
 * @param params.spender Spender's address
 * @param params.options Optional arguments.
 * @param options.provider Ethereum provider to use.
 * @param params.options.erc20Abi ERC-20 token abi.
 *
 * @returns Allowance of spender
 */
async function getAllowance({ erc20Address, owner, spender, options }) {
    var _a, _b;
    options = options !== null && options !== void 0 ? options : {};
    const bridgeParams = utils_1.getBridgeParams();
    const provider = (_a = options.provider) !== null && _a !== void 0 ? _a : utils_1.getEthProvider();
    const erc20Abi = (_b = options.erc20Abi) !== null && _b !== void 0 ? _b : bridgeParams.erc20Abi;
    const allowance = await utils_2.erc20.getAllowance({ erc20Address, owner, spender, provider, erc20Abi });
    return allowance;
}
exports.default = getAllowance;
//# sourceMappingURL=getAllowance.js.map